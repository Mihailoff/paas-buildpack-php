#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# Heroku Revision.
#
# Affixed to all vendored binary output to represent changes to the
# compilation environment without a change to the upstream version,
# e.g. PHP 5.3.27 without, and then subsequently with, libmcrypt.
heroku_rev='-2'

# config
MCRYPT_VERSION="2.5.8"
APACHE_VERSION="2.2.25"
APACHE_PATH="apache"
PHP_VERSION="5.4.32"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

APACHE_URL="https://heroku-buildpack-php.s3.amazonaws.com/apache-""$APACHE_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf

# brew the PHP ;)
echo "-----> Brewing PHP version $PHP_VERSION"
if [ -d $CACHE_DIR/.phpbrew ]; then 
  echo "Cached phpbrew directory detected"
  mv $CACHE_DIR/.phpbrew ~/
else
  echo "First time brewing PHP"
  curl --silent -L https://github.com/phpbrew/phpbrew/blob/1.13.2/phpbrew?raw=true -o phpbrew
  chmod +x phpbrew
  ./phpbrew init
fi

# Detect phpbrew variants (php compilation options)
if [[ ! -z "$PHPBREW_VARIANTS" ]]; then
  echo "Notice: Variable PHPBREW_VARIANTS is not set, falling back to '+default' variant"
  PHPBREW_VARIANTS='+default'
fi

echo "source ~/.phpbrew/bashrc" >> ~/.bashrc
mkdir -p ~/.phpbrew/bin
mv ./phpbrew ~/.phpbrew/bin/phpbrew
# after init phpbrew should be invoked as a bash function, phpbrew executable is invoked somewhere inside
PATH=$PATH:~/.phpbrew/bin/
source ~/.phpbrew/bashrc
phpbrew install $PHP_VERSION +apxs2=/app/apache/bin/apxs $PHPBREW_VARIANTS
phpbrew switch $PHP_VERSION
PHP_DIR=`cd ~/.phpbrew/php/php-$PHP_VERSION && pwd`
cp -r ~/.phpbrew $CACHE_DIR

# update config files
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s $PHP_DIR/bin/php bin/php

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=$PHP_DIR/lib/php
export PHP_INI_SCAN_DIR=$PHP_DIR/etc
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
#rm -rf $CACHE_DIR
